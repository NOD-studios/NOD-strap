define(["can/util/string"],function(t){var n=0,e=function(t,n){var e=Object.getOwnPropertyDescriptor(t,n);return e&&(e.get||e.set)?e:null},r=function(n,r,o){o=o||n;var s;for(var c in n)(s=e(n,c))?this._defineProperty(o,r,c,s):t.Construct._overwrite(o,r,c,n[c])},o=function(n,e,r){r=r||n;for(var o in n)t.Construct._overwrite(r,e,o,n[o])};return t.Construct=function(){return arguments.length?t.Construct.extend.apply(t.Construct,arguments):void 0},t.extend(t.Construct,{constructorExtends:!0,newInstance:function(){var t,n=this.instance();return n.setup&&(t=n.setup.apply(n,arguments)),n.init&&n.init.apply(n,t||arguments),n},_inherit:Object.getOwnPropertyDescriptor?r:o,_defineProperty:function(t,n,e,r){Object.defineProperty(t,e,r)},_overwrite:function(t,n,e,r){t[e]=r},setup:function(n){this.defaults=t.extend(!0,{},n.defaults,this.defaults)},instance:function(){n=1;var t=new this;return n=0,t},extend:function(e,r,o){function s(){return n?void 0:(this.constructor!==s&&arguments.length&&s.constructorExtends&&t.dev.warn("can/construct/construct.js: extending a can.Construct without calling extend"),this.constructor!==s&&arguments.length&&s.constructorExtends?s.extend.apply(s,arguments):s.newInstance.apply(s,arguments))}var c=e,u=r,i=o;"string"!=typeof c&&(i=u,u=c,c=null),i||(i=u,u=null),i=i||{};var a,p,l,d,f,g,h,y,v=this,m=this.prototype;y=this.instance(),t.Construct._inherit(i,m,y);for(f in v)v.hasOwnProperty(f)&&(s[f]=v[f]);t.Construct._inherit(u,v,s),c&&(a=c.split("."),g=a.pop(),p=t.getObject(a.join("."),window,!0),h=p,l=t.underscore(c.replace(/\./g,"_")),d=t.underscore(g),p[g]&&t.dev.warn("can/construct/construct.js: There's already something called "+c),p[g]=s),t.extend(s,{constructor:s,prototype:y,namespace:h,_shortName:d,fullName:c,_fullName:l}),void 0!==g&&(s.shortName=g),s.prototype.constructor=s;var w=[v].concat(t.makeArray(arguments)),C=s.setup.apply(s,w);return s.init&&s.init.apply(s,C||w),s}}),t.Construct.prototype.setup=function(){},t.Construct.prototype.init=function(){},t.Construct});
//# sourceMappingURL=construct.js.map