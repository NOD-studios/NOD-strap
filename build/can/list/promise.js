define(["can/list"],function(){var e=can.List.prototype.replace;can.List.prototype.replace=function(t){var r=e.apply(this,arguments);if(can.isDeferred(t)){can.batch.start(),this.attr("state",t.state()),this.removeAttr("reason"),can.batch.stop();var a=this,n=this._deferred=new can.Deferred;t.then(function(){a.attr("state",t.state()),n.resolve(a)},function(e){can.batch.start(),a.attr("state",t.state()),a.attr("reason",e),can.batch.stop(),n.reject(e)})}return r},can.each({isResolved:"resolved",isPending:"pending",isRejected:"rejected"},function(e,t){can.List.prototype[t]=function(){return this.attr("state")===e}}),can.each(["then","done","fail","always","promise"],function(e){can.List.prototype[e]=function(){return this._deferred||(this._deferred=new can.Deferred,this._deferred.resolve(this)),this._deferred[e].apply(this._deferred,arguments)}})});
//# sourceMappingURL=promise.js.map