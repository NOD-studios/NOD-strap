define(["can/util/library","can/map"],function(e){e.classize=function(t,a){for(var r=t.split(e.undHash),i=0;i<r.length;i++)r[i]=e.capitalize(r[i]);return r.join(a||"")};var t=e.classize,a=e.Map.prototype,r=a.__set;return a.__set=function(a,i,n,c,l){var o;e.dev.warn("can/map/setter is a deprecated plugin and will be removed in a future release. can/map/define provides the same functionality in a more complete API.");var s=t(a),u="set"+s,p=function(t){clearTimeout(o);var r=l&&l.call(d,t);return r!==!1&&e.trigger(d,"error",[a,t],!0),!1},d=this;return this[u]?(e.batch.start(),i=this[u](i,function(e){r.call(d,a,e,n,c,p),clearTimeout(o)},p),void 0===i?(o=setTimeout(function(){e.dev.warn("can/map/setter.js: Setter "+u+" did not return a value or call the setter callback.")},e.dev.warnTimeout),void e.batch.stop()):(r.call(d,a,i,n,c,p),e.batch.stop(),this)):(r.call(d,a,i,n,c,p),this)},e.Map});
//# sourceMappingURL=setter.js.map