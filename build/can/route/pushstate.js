define(["can/util/library","can/route"],function(t){if(window.history&&history.pushState){t.route.bindings.pushstate={root:"/",matchSlashes:!1,paramsMatcher:/^\?(?:[^=]+=[^&]*&)*[^=]+=[^&]*/,querySeparator:"?",bind:function(){t.delegate.call(t.$(document.documentElement),"a","click",n),t.each(o,function(n){a[n]=window.history[n],window.history[n]=function(e,o,i){var r=0===i.indexOf("http"),l=window.location.search+window.location.hash;(!r&&i!==window.location.pathname+l||r&&i!==window.location.href+l)&&(a[n].apply(window.history,arguments),t.route.setState())}}),t.bind.call(window,"popstate",t.route.setState)},unbind:function(){t.undelegate.call(t.$(document.documentElement),"click","a",n),t.each(o,function(t){window.history[t]=a[t]}),t.unbind.call(window,"popstate",t.route.setState)},matchingPartOfURL:function(){var t=e(),n=location.pathname+location.search,o=n.indexOf(t);return n.substr(o+t.length)},setURL:function(n){i&&-1===n.indexOf("#")&&window.location.hash&&(n+=window.location.hash),window.history.pushState(null,null,t.route._call("root")+n)}};var n=function(n){if(!(n.isDefaultPrevented?n.isDefaultPrevented():n.defaultPrevented===!0)){var o=this._node||this,a=o.host||window.location.host;if(window.location.host===a){var r=e();if(0===o.pathname.indexOf(r)){var l=(o.pathname+o.search).substr(r.length),u=t.route.deparam(l);u.hasOwnProperty("route")&&(i=!0,window.history.pushState(null,null,o.href),n.preventDefault&&n.preventDefault())}}}},e=function(){var n=location.protocol+"//"+location.host,e=t.route._call("root"),o=e.indexOf(n);return 0===o?e.substr(n.length):e},o=["pushState","replaceState"],a={},i=!1;t.route.defaultBinding="pushstate"}return t});
//# sourceMappingURL=pushstate.js.map